.panel {
    --border-radius: 8px;

    flex: 2;
    display: flex;
    flex-direction: column;
    min-width: 320px;

    & ul {
        list-style: none;
    }
}

.folders {
    padding: 6px;
    display: flex;
    flex-direction: column;
    background-color: var(--bg-light);
    flex: 1;
    border-bottom-left-radius: var(--border-radius);
    border-bottom-right-radius: var(--border-radius);

    & > :first-child {
        margin: 12px 4px;
    }

    & > .contents {
        margin: 0;
        padding-inline-start: 0;
    }
}

.tabs:has(#leftTab[aria-selected='true']) + .folders {
    border-top-right-radius: var(--border-radius);
}

.tabs:has(#rightTab[aria-selected='true']) + .folders {
    border-top-left-radius: var(--border-radius);
}

.folder {
    --list-item-indent: 12px;
}

.controls {
    display: flex;
}

.dragHandle {
    align-self: stretch;
    background-color: var(--bg-mid-dark);
    border-top-left-radius: 4px;
    border-bottom-left-radius: 4px;
    color: var(--text-faint);
    display: grid;
    place-items: center;
    width: 22px;

    &:hover {
        background-color: var(--bg-mid-light);
        cursor: grab;
    }
}

.heading {
    composes: listItem from global;

    display: flex;
    align-items: center;
    gap: 8px;
    flex: 1;

    &.notBase {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
    }

    /* rename button - pushes other buttons to right end */
    & > h2 + button {
        margin-inline-end: auto;
    }

    /* ensures folder name/buttons layer over openToggle clickable background */
    & > * {
        z-index: 100;
    }

    /* prevent dragging when clicking on non-button elements outside of drag handle */
    & :is(h2, i) {
        pointer-events: none;
    }

    &:hover label {
        background-color: var(--bg-mid-light);
    }
}

.openToggle {
    position: absolute;
    background-color: transparent;
    width: 100%;
    height: 100%;
    left: 0;
}

.contents {
    --gap-size: 6px;

    padding-inline-start: var(--list-item-indent);
    display: flex;
    flex-direction: column-reverse;
    gap: var(--gap-size);
    margin-top: var(--gap-size);

    &.base {
        /* I really cannot be bothered to sort this out more properly for now. I'll deal with it if I have to at a later date, but since this is mostly for personal use, this will suffice...for now.
        I just can't seem to get a fully flexible set of containers that still overflow-scrolls, without setting a fixed height. Even 100% height doesn't work, with or without a parent "overflow container" */
        max-height: 666px;
        overflow-y: scroll;
        scrollbar-color: var(--bg-mid-dark) var(--bg-light);
    }
}

.tabs {
    display: flex;
    background-color: var(--bg-dark);
}

.tab {
    flex: 1;
    background-color: var(--bg-light);
    border-top-left-radius: var(--border-radius);
    border-top-right-radius: var(--border-radius);
    font-size: 1.5rem;
    padding: 8px;
    position: relative;

    &[aria-selected='false'] {
        background-color: var(--bg-dark);

        &:hover {
            text-decoration: underline;
            text-underline-offset: 6px;
            text-decoration-color: var(--text-normal);
        }
    }

    &[aria-selected='true'] {
        cursor: auto;
        z-index: 1;

        &::before {
            --size: calc(2 * var(--border-radius));

            content: '';
            position: absolute;
            height: var(--size);
            width: var(--size);
            bottom: 0;
        }
    }
}

#leftTab[aria-selected='true']::before {
    border-bottom-left-radius: var(--border-radius);
    box-shadow: calc(-1 * var(--border-radius)) 0 0 0 var(--bg-light);
    right: calc(-1 * var(--size));
}

#rightTab[aria-selected='true']::before {
    border-bottom-right-radius: var(--border-radius);
    box-shadow: var(--border-radius) 0 0 0 var(--bg-light);
    left: calc(-1 * var(--size));
}

.form {
    display: flex;
    align-items: center;

    & > :first-child {
        margin-inline-end: 1rem;
    }
}

.newFolder {
    margin-inline-start: var(--list-item-indent);
    z-index: 1000;
}

.highlighted {
    background-color: var(--bg-mid-light) !important;
    outline: 2px solid var(--text-faint);
    border-radius: 4px;
}
